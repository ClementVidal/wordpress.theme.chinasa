@mixin flex-box( $dir, $axis-align, $cross-axis-alig ) {
    display: flex;
    flex-direction: $dir;
    flex-wrap: nowrap;
    justify-content: $axis-align;
    align-items: $cross-axis-alig;
}
@mixin vertical-line( $side, $gutter-space, $color, $style:solid ) {
    content: " ";
    position: absolute;
    top: 0;
    bottom: 0;
    box-shadow:0px 0px 0.4rem darken( $color, 10% );
    z-index:1;
    $darken-precentage: 13%;
    $lighten-precentage: 12%;
    @if $side == "right" {
        right: $gutter-space;
        border-right: pixel-to-rem() $style lighten( $color, $lighten-precentage );
        border-left: pixel-to-rem() $style darken( $color, $darken-precentage );
    }
    @else if $side == "left" {
        left: $gutter-space;
        border-right: pixel-to-rem() $style lighten( $color, $lighten-precentage );
        border-left: pixel-to-rem() $style darken( $color, $darken-precentage );
    }
}
@mixin outline-text( $color: black, $width: pixel-to-rem( 2 ) ){
    text-shadow: 0 0 $width $color, 0 0 $width $color;
}
@mixin content-container() {
    @extend .container;
    margin-top:0;
    margin-bottom: 0;
    margin-left: 2 * $sidebar-content-offset + $sidebar-width;
    margin-right: $sidebar-content-offset;
    padding: 2rem 4rem;
    @include media-breakpoint-down(md) {
        padding: 1rem 0rem;
        margin-left: 0;
    }

    >.container {
        padding-left: 2.6rem;
    }

}
@mixin translate-on-visible( $axis:"Y", $offset:4rem ) {

    transition: transform 1.0s ease;
    @if( $axis == "Y" ) {
        transform: translateY( $offset );
        &.visible {
            transform: translateY( 0rem );
        }
    }
    @else if( $axis == "X" ) {
        transform: translateX( $offset );
        &.visible {
            transform: translateX( 0rem );
        }
    }
    @else {
        @error "Invalid argument to translate-on-visible";
    }
}

@function pixel-to-rem( $pixel:1 ) {
    @return ( $pixel / 16 )+rem;
}
